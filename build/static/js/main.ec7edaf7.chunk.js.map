{"version":3,"sources":["services/httpService.js","store/actions/itemActions.js","assets/img/loading.gif","services/channelService.js","routes.js","pages/Home.jsx","pages/Main.jsx","cmps/Header.jsx","App.jsx","store/reducers/itemReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["Axios","create","withCredentials","channelList","getById","channelId","currChannel","map","channel","_id","modifyByChannel","sheet","newSheet","adNameVal","timeVal","tempSheet","row","newRow","cell","cellName","className","dashIdx","indexOf","substring","date","_handleDate","value","push","time","_handleTime","col","includes","val","isDateReversed","month","length","day","year","hours","routes","path","component","dispatch","useDispatch","items","useSelector","state","itemModule","useEffect","a","type","err","handleClick","item","itemId","currItem","console","log","to","onClick","channelName","src","loading","alt","useState","setItems","tabNames","setTabNames","countRef","useRef","onDrop","useCallback","acceptedFiles","readExcel","useDropzone","getRootProps","getInputProps","ev","file","current","target","files","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsnames","SheetNames","data","tab","ws","Sheets","tabData","sheet_to_json","raw","onerror","error","then","d","newArr","sheetTab","tempArr","idx","stringRow","Object","values","cellData","jdx","width","tabCount","modifiedArr","onChange","valueRenderer","Header","App","route","exact","initialState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec7edaf7.chunk.js","sourcesContent":["import Axios from 'axios'\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true\n})\n\nexport const httpService = {\n    get(endpoint, data) {\n        return ajax(endpoint, 'GET', data)\n    },\n    post(endpoint, data) {\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data) {\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data) {\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\nasync function ajax(endpoint, method = 'get', data = null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data,\n            params: (method === 'GET') ? data : null\n        })\n        return res.data\n    } catch (err) {\n        console.dir(err)\n        if (err.response && err.response.status === 401) {\n            window.location.assign('/#/login')\n        }\n        throw err\n    }\n}","import { itemService } from '../../services/itemService'\n\nexport function loadItems() {\n    return async dispatch => {\n        try {\n            const items = channelList\n            dispatch({ type: 'SET_ITEMS', items })\n        } catch (err) { }\n    }\n}\n\n// export function loadItem(id) {\n//     console.log('id', id);\n//     return async dispatch => {\n//         try {\n//             const currItem = await itemService.getById(id)\n//             dispatch({ type: 'SET_ITEM', currItem })\n//         } catch (err) {}\n//     }\n// }\n\nexport function saveItem(item) {\n    const type = item._id ? 'UPDATE_ITEMS' : 'ADD_ITEM'\n    return async dispatch => {\n        try {\n            const savedItem = await itemService.save(item)\n            dispatch({ type, item: savedItem })\n        } catch (err) {\n            console.log('ArticelActions: err in save/update item', err)\n        }\n    }\n}\n\n\nexport function removeItem(itemId) {\n    return async dispatch => {\n        try {\n            await itemService.remove(itemId)\n            dispatch({ type: 'REMOVE_ITEM', itemId })\n        } catch (err) {\n            console.log('ArticelActions: err in removeItem', err)\n        }\n    }\n}\n\nexport function setItem(itemId) { // Action Creator\n    return async dispatch => {\n        try {\n            const item = getById(itemId)\n            dispatch({ type: 'SET_CURR_ITEM', currItem: item })\n        } catch (err) {\n            console.log('ArticelActions: err in setItem', err)\n        }\n    }\n}\n\nconst channelList = [\n    {\n        \"_id\": \"612e439936c3d33aecdbe4fd\",\n        \"channelName\": \"פרטנר פרומו\",\n        \"channelId\": \"1105\"\n    },\n    {\n        \"_id\": \"612e443b36c3d33aecdbe4fe\",\n        \"channelName\": \"פרטנר סדרות\",\n        \"channelId\": \"14731\"\n    },\n    {\n        \"_id\": \"612e445b36c3d33aecdbe500\",\n        \"channelName\": \"ענני תקשורת\",\n        \"channelId\": \"ananey\"\n    },\n    {\n        \"_id\": \"612e447736c3d33aecdbe502\",\n        \"channelName\": \"BollyShow\",\n        \"channelId\": \"1339\"\n    },\n    {\n        \"_id\": \"612e447e36c3d33aecdbe503\",\n        \"channelName\": \"BollyWood\",\n        \"channelId\": \"1337\"\n    },\n    {\n        \"_id\": \"612e448536c3d33aecdbe504\",\n        \"channelName\": \"פודי\",\n        \"channelId\": \"1293\"\n    },\n    {\n        \"_id\": \"612e448d36c3d33aecdbe505\",\n        \"channelName\": \"פרטנר סרטים\",\n        \"channelId\": \"1271\"\n    }\n]\n\nfunction getById(channelId) {\n    let currChannel\n    channelList.map((channel) => {\n        if (channelId === channel._id) currChannel = channel\n    })\n    return currChannel\n}","export default __webpack_public_path__ + \"static/media/loading.c7d9f081.gif\";","export function modifyByChannel(sheet, channelId) {\r\n    let newSheet = []\r\n    let adNameVal = []\r\n    let timeVal = []\r\n    let tempSheet = []\r\n\r\n    switch (channelId) {\r\n\r\n        case '1293'://Foody\r\n            sheet.map((row) => {\r\n                let newRow = []\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"5\") {\r\n                        const val = cell.value\r\n                        const date = _handleDate(val, false)\r\n                        cell.value = date\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"6\") {\r\n                        const val = cell.value\r\n                        const time = _handleTime(val)\r\n                        cell.value = time\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                })\r\n                newSheet.push(newRow)\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                        adNameVal.push(cell.value)\r\n                        cell.value = channelId\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"4\") {\r\n                        let col = cellName.substring(0, dashIdx)\r\n                        col -= 2\r\n                        cell.value = adNameVal[col]\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                })\r\n            })\r\n            return newSheet\r\n\r\n        case '1337'://BollyWood\r\n        case '1339'://BollyShow\r\n            sheet.map((row) => {\r\n                row.map((cell) => {\r\n                    if ((cell.value).includes('PARTNER')) tempSheet.push(row)\r\n                })\r\n            })\r\n            tempSheet.map((row) => {\r\n                let newRow = []\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"1\") {\r\n                        const val = cell.value\r\n                        const date = _handleDate(val, false)\r\n                        cell.value = date\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"2\") {\r\n                        const val = cell.value\r\n                        const time = _handleTime(val)\r\n                        cell.value = time\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                        cell.value = channelId\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"4\") {\r\n                        newRow.push(cell)\r\n                    }\r\n                })\r\n                newSheet.push(newRow)\r\n            })\r\n            return newSheet\r\n\r\n        case '1271'://Movies\r\n            sheet.map((row) => {\r\n                let newRow = []\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"1\") {\r\n                        const val = cell.value\r\n                        const date = _handleDate(val, false)\r\n                        cell.value = date\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"2\") {\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                        const val = cell.value\r\n                        const time = _handleTime(val)\r\n                        timeVal.push(time)\r\n                        cell.value = channelId\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"5\") {\r\n                        newRow.push(cell)\r\n                    }\r\n                })\r\n                newSheet.push(newRow)\r\n            })\r\n\r\n            newSheet.map((row) => {\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"2\") {\r\n                        let col = cellName.substring(0, dashIdx)\r\n                        col -= 1\r\n                        cell.value = timeVal[col]\r\n                    }\r\n                })\r\n            })\r\n            return newSheet\r\n\r\n        case '14731'://Series\r\n        sheet.map((row) => {\r\n            let newRow = []\r\n            row.map((cell) => {\r\n                const cellName = cell.className\r\n                const dashIdx = cellName.indexOf(\"-\")\r\n                if (cellName.substring(dashIdx + 1) === \"1\") {\r\n                    const val = cell.value\r\n                    const date = _handleDate(val, false)\r\n                    cell.value = date\r\n                    newRow.push(cell)\r\n                }\r\n                if (cellName.substring(dashIdx + 1) === \"2\") {\r\n                    const val = cell.value\r\n                    const time = _handleTime(val)\r\n                    timeVal.push(time)\r\n                    newRow.push(cell)\r\n                }\r\n                if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                    cell.value = channelId\r\n                    newRow.push(cell)\r\n                }\r\n                if (cellName.substring(dashIdx + 1) === \"4\") {\r\n                    newRow.push(cell)\r\n                }\r\n            })\r\n            newSheet.push(newRow)\r\n        })\r\n\r\n        newSheet.map((row) => {\r\n            row.map((cell) => {\r\n                const cellName = cell.className\r\n                const dashIdx = cellName.indexOf(\"-\")\r\n                if (cellName.substring(dashIdx + 1) === \"2\") {\r\n                    let col = cellName.substring(0, dashIdx)\r\n                    col -= 1\r\n                    cell.value = timeVal[col]\r\n                }\r\n            })\r\n        })\r\n        return newSheet\r\n\r\n        case '1212'://Tedy\r\n            sheet.map((row) => {\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"7\") {\r\n                        if (cell.value === \"פרסומת\") tempSheet.push(row)\r\n                    }\r\n                })\r\n            })\r\n            tempSheet.map((row) => {\r\n                let newRow = []\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"1\") {\r\n                        const val = cell.value\r\n                        const date = _handleDate(val, true)\r\n                        cell.value = date\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"2\") {\r\n                        const val = cell.value\r\n                        const date = _handleTime(val)\r\n                        cell.value = date\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                        cell.value = channelId\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"5\") {\r\n                        newRow.push(cell)\r\n                    }\r\n                })\r\n                newSheet.push(newRow)\r\n            })\r\n            return newSheet\r\n\r\n        case '1105'://Promos\r\n            sheet.map((row) => {\r\n                let newRow = []\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"1\") {\r\n                        const val = cell.value\r\n                        const date = _handleDate(val, false)\r\n                        cell.value = date\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"2\") {\r\n                        const val = cell.value\r\n                        const date = _handleTime(val)\r\n                        cell.value = date\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                        cell.value = channelId\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"4\") {\r\n                        newRow.push(cell)\r\n                    }\r\n                })\r\n                newSheet.push(newRow)\r\n            })\r\n            return newSheet\r\n\r\n        case '1351'://Food+    \r\n        case '1353'://Travel+    \r\n        case '1365'://Health+\r\n            sheet.map((row) => {\r\n                let newRow = []\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"5\") {\r\n                        const val = cell.value\r\n                        const date = _handleDate(val, true)\r\n                        cell.value = date\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"6\") {\r\n                        const val = cell.value\r\n                        const date = _handleTime(val)\r\n                        cell.value = date\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                        const val = cell.value\r\n                        adNameVal.push(val)\r\n                        cell.value = channelId\r\n                    }\r\n                })\r\n                newSheet.push(newRow)\r\n                row.map((cell) => {\r\n                    const cellName = cell.className\r\n                    const dashIdx = cellName.indexOf(\"-\")\r\n                    if (cellName.substring(dashIdx + 1) === \"3\") {\r\n                        cell.value = channelId\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                    if (cellName.substring(dashIdx + 1) === \"4\") {\r\n                        let col = cellName.substring(0, dashIdx)\r\n                        col -= 2\r\n                        cell.value = adNameVal[col]\r\n                        if (cellName.substring(0, dashIdx) === \"2\") return\r\n                        newRow.push(cell)\r\n                    }\r\n                })\r\n            })\r\n\r\n            return newSheet\r\n    }\r\n\r\n}\r\n\r\nfunction _handleDate(date, isDateReversed) {\r\n    let newDate\r\n    let month = date.substring(0, date.indexOf(\"/\"))\r\n    if (month.length === 1) month = '0' + month\r\n    let day = date.substring(date.indexOf(\"/\") + 1, date.indexOf(\"/\", 3))\r\n    if (day.length === 1) day = '0' + day\r\n    let year = date.substring(date.indexOf(\"/\", 3) + 1, date.indexOf(\"/\", 3) + 5)\r\n    newDate = isDateReversed ? month + '/' + day + '/' + year : day + '/' + month + '/' + year\r\n    return newDate\r\n}\r\n\r\nfunction _handleTime(time) {\r\n    let minutes\r\n    let hours = time.substring(0, time.indexOf(\":\"))\r\n    if (hours.length === 1) hours = '0' + hours\r\n\r\n    if (time.length > 5) {\r\n        minutes = time.substring(time.indexOf(\":\") + 1, time.indexOf(\":\", 3))\r\n    } else {\r\n        minutes = time.substring(time.indexOf(\":\") + 1)\r\n    }\r\n\r\n    const newTime = hours + \":\" + minutes\r\n    return newTime\r\n}","import { Home } from './pages/Home.jsx'\r\nimport { Main } from './pages/Main.jsx'\r\n\r\nexport const routes = [{\r\n    path: '/',\r\n    component: Home\r\n}, \r\n{\r\n    path: '/:channelId?',\r\n    component: Main\r\n}\r\n]","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { loadItems, setItem } from '../store/actions/itemActions.js'\r\nimport loading from '../assets/img/loading.gif'\r\n\r\nexport const Home = () => {\r\n    const dispatch = useDispatch()\r\n    const { items } = useSelector(state => state.itemModule)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(loadItems())\r\n    }, [dispatch])\r\n\r\n    const handleClick = (item) => {\r\n        dispatch(setItem(item._id))\r\n    }\r\n\r\n    if (!items) return <div className=\"loading\">\r\n        <img className='loading-img' src={loading} alt=\"\" />\r\n    </div>\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"container\">\r\n                {items.map(item => {\r\n                    return (\r\n                        <Link to={`/${item.channelId}`} onClick={() => { handleClick(item) }} className=\"button\" key={item.channelId}>\r\n                            <div>{item.channelName}</div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useCallback, useRef } from 'react';\r\nimport * as XLSX from 'xlsx'\r\nimport ReactDataSheet from 'react-datasheet';\r\nimport { useSelector } from 'react-redux'\r\nimport { useDropzone } from 'react-dropzone';\r\nimport loading from '../assets/img/loading.gif'\r\nimport { modifyByChannel } from '../services/channelService.js'\r\n\r\nexport function Main() {\r\n\tconst [items, setItems] = useState([])\r\n\tconst { currItem } = useSelector(state => state.itemModule)\r\n\tconst [tabNames, setTabNames] = useState([])\r\n\tconst [count, setCount] = useState(0)\r\n\tconst countRef =  useRef(null)\r\n\r\n\tconst onDrop = useCallback(acceptedFiles => {\r\n\t\treadExcel(acceptedFiles)\r\n\t}, [currItem])\r\n\r\n\tconst { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n\tconst increaseCount = () => {\r\n\t\tcountRef.current++\r\n\t  }\r\n\r\n\r\n\r\n\tconst readExcel = (ev) => {\r\n\t\tincreaseCount()\r\n\t\tlet file\r\n\t\tif (ev.target) file = ev.target.files[0]\r\n\t\telse file = ev[0]\r\n\t\tconst promise = new Promise((resolve, reject) => {\r\n\t\t\tconst fileReader = new FileReader()\r\n\t\t\tfileReader.readAsArrayBuffer(file)\r\n\t\t\tfileReader.onload = (ev) => {\r\n\t\t\t\tconst bufferArray = ev.target.result\r\n\t\t\t\tconst wb = XLSX.read(bufferArray, { type: 'buffer' })\r\n\t\t\t\tlet wsnames = wb.SheetNames\r\n\t\t\t\tlet data = []\r\n\t\t\t\tlet tabNames = []\r\n\t\t\t\twsnames.map((tab) => {\r\n\t\t\t\t\tconst ws = wb.Sheets[tab]\r\n\t\t\t\t\tif (ws['!ref']) tabNames.push(tab)\r\n\t\t\t\t\tconst tabData = XLSX.utils.sheet_to_json(ws, { raw: false })\r\n\t\t\t\t\tif (tabData.length > 0) data.push(tabData)\r\n\t\t\t\t})\r\n\t\t\t\tsetTabNames(tabNames)\r\n\t\t\t\tresolve(data)\r\n\t\t\t}\r\n\t\t\tfileReader.onerror = ((error) => reject(error))\r\n\t\t})\r\n\t\tpromise.then((d) => {\r\n\t\t\tlet newArr = []\r\n\t\t\td.map((sheetTab) => {\r\n\t\t\t\tlet tempArr = []\r\n\t\t\t\tsheetTab.map((row, idx) => {\r\n\t\t\t\t\tconst stringRow = Object.values(row)\r\n\t\t\t\t\tlet newRow = []\r\n\t\t\t\t\tstringRow.map((cellData, jdx) => {\r\n\t\t\t\t\t\tconst cellName = (idx + 1) + \"-\" + (jdx + 1)\r\n\t\t\t\t\t\tconst cell = { value: cellData, width: 100, className: cellName }\r\n\t\t\t\t\t\tif (stringRow.length > 1) newRow.push(cell)\r\n\t\t\t\t\t})\r\n\t\t\t\t\ttempArr.push(newRow)\r\n\t\t\t\t})\r\n\t\t\t\tnewArr.push(tempArr)\r\n\t\t\t})\r\n\t\t\tlet newSheet = []\r\n\t\t\tlet tabCount = 0\r\n\r\n\t\t\tif (newArr.length > 1) {\r\n\t\t\t\tnewArr.map((sheetTab) => {\r\n\t\t\t\t\tlet channelId\r\n\t\t\t\t\tif (tabCount === 0) channelId = \"1351\"\r\n\t\t\t\t\tif (tabCount === 1) channelId = \"1353\"\r\n\t\t\t\t\tif (tabCount === 2) channelId = \"1365\"\r\n\t\t\t\t\tconst modifiedArr = modifyByChannel(sheetTab, channelId)\r\n\t\t\t\t\tnewSheet.push(modifiedArr)\r\n\t\t\t\t\ttabCount++\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tconst modifiedArr = modifyByChannel(newArr[0], currItem.channelId)\r\n\t\t\t\tnewSheet.push(modifiedArr)\r\n\t\t\t}\r\n\t\t\tsetItems(newSheet)\r\n\t\t})\r\n\t}\r\n\r\n\tif (!currItem) return <div className=\"loading\">\r\n\t\t<img className='loading-img' src={loading} alt=\"\" />\r\n\t</div>\r\n\r\n\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t<h1 className=\"channel-title\">{currItem.channelName}</h1>\r\n\t\t\t<section className=\"dropzone-container\">\r\n\t\t\t\t<div {...getRootProps({ className: 'dropzone' })}>\r\n\t\t\t\t\t<input {...getInputProps()} onChange={readExcel} />\r\n\t\t\t\t\t<p>גררי את הקבצים לכאן או לחצי כדי לבחור קבצים</p>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<div className=\"sheets-container\">\r\n\t\t\t\t{items.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"sheet\" key={idx}>\r\n\t\t\t\t\t\t\t{tabNames.length > 1 && <h3>{tabNames[idx]}</h3>}\r\n\t\t\t\t\t\t\t<ReactDataSheet\r\n\t\t\t\t\t\t\t\tdata={item}\r\n\t\t\t\t\t\t\t\tvalueRenderer={cell => cell.value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import { Link } from 'react-router-dom'\r\nexport const Header = () => {\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <Link to={'/'} className=\"header-title\">ADDRESSABLE</Link>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { routes } from './routes.js'\r\n\r\nimport { Header } from './cmps/Header'\r\n\r\nexport function App(){\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            <main>\r\n                <Switch>\r\n                    {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    )\r\n}","const initialState = {\n  currItem: null,\n  items: null\n}\n\nexport function itemReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SET_ITEMS':\n      return { ...state, items: action.items }\n      case 'SET_ITEM':\n      return { ...state, currItem: action.currItem }\n    case 'ADD_ITEM':\n      return { ...state, items: [...state.items, action.item] }\n    case 'UPDATE_ITEM':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item._id === action.item._id ? action.item : item\n        )\n      }\n    case 'REMOVE_ITEM':\n      return { ...state, items: state.items.filter(item => item._id !== action.itemId) }\n    case 'SET_CURR_ITEM':\n      return { ...state, currItem: action.currItem }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport { itemReducer } from './itemReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    itemModule: itemReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\"\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nconst composeEnhancers =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App'\r\nimport './assets/styles/main.scss'\r\nimport { store } from './store/store'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}